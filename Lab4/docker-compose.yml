services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:16
    container_name: my_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: zrk@12345
      POSTGRES_DB: payment_amendes
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U admin -d payment_amendes' ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


  mockapi:
    build: ./mock_api
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "3000:3000"

#  your_api:
#    build: ./your_api
#    depends_on:
#      postgres:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#      mockapi:
#        condition: service_started
#    ports:
#      - "8080:8080"

volumes:
  postgres_data:

